// Responsive and fluid type sizing
// Root sizes are set in 3_generic/_root.scss


// Fallbacks for browsers that won’t support fluid type with calc. Desktop sizes used.
h1,
.h1 {
  font-size: $h1-max * 1rem;
  font-weight: $font-custom__sans__light;
  letter-spacing: $kerning;
}

h2,
.h2 {
  font-size: #{$h2-max * 1rem};
  font-weight: $font-custom__sans__light;
  letter-spacing: $kerning;
}

h3,
.h3 {
  font-size: #{$h3-max * 1rem};
  font-weight: $font-custom__sans__regular;
}

h4,
.h4 {
  font-size: #{$h4-max * 1rem};
  // weight set a little further below in a group
}

h5,
.h5,
blockquote p,
table caption,
.u__lead,
dt {
  font-size: #{$h5-max * 1rem};
}

h4,
dt,
h5 {
  font-weight: $font-custom__sans__bold;
  letter-spacing: $kerning;
}

h6,
.h6,
.u__lead {
  font-size: #{$h6-max * 1rem};
}

h6 {
  letter-spacing: $kerning;
  text-transform: uppercase;
}

body,
button,
input,
textarea {
  font-size: #{$base-max * 1rem};
  line-height: calc(2ex + .25em);
}
// End Fallbacks for older browsers


// Fluid sizing with calc()
#{$all-headings},
dt,
table caption,
blockquote p,
.u__lead,
body {
  // Body is a catch all for other block level elements
  font-size: calc(var(--fs__min) * 1rem);

  // We could do this with clamp() but it is tricky to make the calculations work and honor browser font size settings
  @include breakpoint-up('small') {
    font-size: calc(
      (var(--fs__min) * 1rem) + (var(--fs__max) - var(--fs__min)) * ((100vw - #{$min-vw * 1rem}) / #{$max-vw - $min-vw})
    );
  }

  @include breakpoint-up('x-large') {
    font-size: calc(var(--fs__max) * 1rem);
  }
}

// Line Heights
// Universal line-height based on the "ex" unit, which is one "x" tall
// From https://kittygiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/
#{$all-headings} {
  line-height: calc(2ex + .25em);
}

p,
li,
dt,
dd {
  line-height: calc(2ex + .75em);
}

// Only one size has been set for the small style
small,
.small,
figcaption {
  font-size: calc(var(--fs__sm) * 1rem);
  letter-spacing: ($kerning * 2);
}

// Only declaring this because the weight is not browser default 700
strong,
b {
  font-weight: $font-custom__sans__bold;
}

// Browser default, no need for this
// em,
// i {
//   font-weight: italic;
// }

// Vertical rhythm
.v-rhythm {
  //background: linear-gradient(#c0c 0px, #fff 1px) repeat;
  //background-size: 100% 27px;
  //background-position: top 4px left 0;

  > * + * {
    margin-top: $vertical-rhythm;
  }

  > .u__sr-only + * {
    margin-top: 0;
  }

  h5 + p, .h5 + p, 
  h6 + p, .h6 + p {
    margin-top: 0;
  }
}


// HTML elements

dl {
  dt {
    border-top: 0.5px solid palette('brand-red');
    font-weight: $font-custom__sans__bold;
    padding: ($vertical-rhythm * 0.5) 0;
  }

  dd {
    padding-bottom: $vertical-rhythm * 0.5;
  }

  dd + dt {
    margin-top: $vertical-rhythm;
  }

  @include breakpoint-up(large) {
    // Subgrid trick from https://codepen.io/chriscoyier/pen/YzxqJap
    display: grid;
    grid-template-columns: min-content 1fr;
    gap: 1rem;

    dt {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: subgrid;
      padding: $vertical-rhythm 0 0;

      // Negate the height
      height: 0;

      + dd {
        margin-top: -0.4em;
      }
    }

    dd {
      grid-column: 2 / 2;

      + dt {
        margin-top: 0;
      }
    }
  }
}

// blockquote {
//   quotes: none;
//   position: relative;
// 
//   p {
//     font-style: italic;
//     padding-left: 1.375em;
//   }
// 
//   p::before,
//   p:last-child::after {
//     //color: palette('brand-orange');
//     font-style: normal;
//     line-height: 1;
//   }
// 
//   p::before {
//     content: "“";
//     font-size: 3.5em;
//     position: absolute;
//     top: 0;
//     left: 0;
//   }
// 
//   p:last-child::after {
//     content: "”";
//     font-size: 2.5em;
//     display: inline;
//     line-height: 0;
//     margin-left: .0625em;
//     vertical-align: text-bottom;
//   }
// 
//   & + .citation {
//     //color: palette(gray-500);
//     padding-bottom: $vertical-rhythm;
//     padding-left: 1.375em;
//   }
// }

hr {
  border: none;
  height: $vertical-rhythm * 2;
  line-height: 1;
  position: relative;
  width: 100%;

  &::after {
    content: '';
    height: 4px;
    position: absolute;
    border-top: 0.5px double palette('brand-red');
    border-bottom: 0.5px double palette('brand-red');
    top: calc(50% - 2px);
    left: 0;
    right: 0;
  }
}

ul { list-style: square; }

ul ul { list-style: disc; }

ul ul ul { list-style: circle; }

ol { list-style: decimal; }

ol ol { list-style: upper-alpha; }

ol ol ol { list-style: upper-roman; }

ol ol ol ol { list-style: lower-alpha; }

ol ol ol ol ol { list-style: lower-roman; }

figure {
  display: block;

  figcaption {
    padding-top: #{$vertical-rhythm * 0.5};
    padding-bottom: #{$vertical-rhythm * 0.5};
  }
}

//table {
//  width: 100%;
//
//  th {
//    //border-bottom: 2px solid $table-border-color;
//    //padding: $table-cell-padding;
//    text-align: left;
//  }
//
//  td {
//    //border-top: 1px solid $table-border-color;
//    //padding: $table-cell-padding;
//  }
//
//  // zebra striping pattern
//  tbody {
//
//    tr:nth-of-type(odd) {
//      //background-color: $table-border-color;
//    }
//  }
//}

// Inline typography elements
em,
i,
cite,
small,
sup,
sup {
  letter-spacing: $kerning;
}

//sub,
//sup {
//  font-size: 75%;
//  line-height: 1;
//  position: relative;
//}
//
//sup {
//  top: -0.5em;
//}
//
//sub {
//  bottom: -0.25em;
//}

abbr[title],
dfn[title] {
  border-bottom: 1px dotted currentColor;
  cursor: help;
}

abbr[title],
.u__abbr {
  font-size: 87.5%;
  letter-spacing: ($kerning * 2);
  text-transform: uppercase;
}

dfn[title] {
  font-style: normal;
}

//var {
//  color: palette(mono, 75);
//  display: inline-block;
//  padding: 0 .125em;
//}

// Proper code blocks need to be surrounded by a <pre>. They work together.
//pre {
//  white-space: pre-wrap;
//  word-wrap: break-word; // For IE 5.5+ and up
//
//  code {
//    border-bottom: 1px solid palette(mono, 25);
//    border-left: 5px solid $color-code;
//    border-radius: 0;
//    display: block;
//    margin: 0;
//    padding: 1.375em 1.25em 1.3125em;
//  }
//}

//code,
//kbd,
//samp,
//mark,
//ins {
//  display: inline-block;
//  line-height: 1.5;
//  padding: 0.125em 0.25em 0;
//}

//mark {
//  background-color: palette('brand-yellow');
//  display: inline-block;
//  padding: 0.125em 0 0.0625em;
//}

//code,
//kbd,
//samp {
//  background: rgba(#000, .05);
//  //border-radius: $default-border-radius;
//  box-shadow: 0 0 .25em rgba(#000, .1) inset;
//  //font-family: $font-mono;
//}
//
//code {
//  //color: $color-code;
//}
//

//strike,
//s {
//  //color: palette(mono, 25);
//}
//
//del {
//  //color: $color-error;
//}
//
//ins {
//  //background-color: palette(mono, 25);
//  text-decoration: none;
//}
//
//// These should change depending on the language
//[lang="en-US"] {
//
//  q {
//    display: inline;
//
//    ::before { content: "“"; }
//
//    ::after {
//      content: "”";
//      white-space: nowrap;
//    }
//
//    // Nested
//    q::before { content: "‘"; }
//
//    q::after { content: "’"; }
//  }
//}
